{"ast":null,"code":"var _jsxFileName = \"/home/asalmi/Documents/sort2.0/src/components/DisplayArea.js\";\nimport React, { useState } from 'react';\nimport Measure from 'react-measure';\nimport GraphDisplay from './GraphDisplay';\n\nfunction DisplayArea() {\n  const [dimensions, setDimensions] = useState({\n    width: 300,\n    height: 300\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"98%\",\n      width: \"98%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Measure, {\n    bounds: true,\n    onResize: contentRect => {\n      setDimensions(contentRect.bounds);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, ({\n    measureRef\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    ref: measureRef,\n    style: {\n      height: \"98%\",\n      width: \"98%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(GraphDisplay, {\n    width: dimensions.width,\n    height: dimensions.height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default DisplayArea;","map":{"version":3,"sources":["/home/asalmi/Documents/sort2.0/src/components/DisplayArea.js"],"names":["React","useState","Measure","GraphDisplay","DisplayArea","dimensions","setDimensions","width","height","contentRect","bounds","measureRef"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,SAASC,WAAT,GAAsB;AAClB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC;AAACM,IAAAA,KAAK,EAAE,GAAR;AAAaC,IAAAA,MAAM,EAAE;AAArB,GAAD,CAA5C;AAGA,sBACI;AAAM,IAAA,KAAK,EAAE;AAACA,MAAAA,MAAM,EAAC,KAAR;AAAeD,MAAAA,KAAK,EAAC;AAArB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,OAAD;AACI,IAAA,MAAM,MADV;AAEI,IAAA,QAAQ,EAAEE,WAAW,IAAI;AACrBH,MAAAA,aAAa,CAACG,WAAW,CAACC,MAAb,CAAb;AACH,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMK,CAAC;AAAEC,IAAAA;AAAF,GAAD,kBACG;AAAK,IAAA,GAAG,EAAEA,UAAV;AAAsB,IAAA,KAAK,EAAE;AAACH,MAAAA,MAAM,EAAC,KAAR;AAAeD,MAAAA,KAAK,EAAC;AAArB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEF,UAAU,CAACE,KAAhC;AAAuC,IAAA,MAAM,EAAEF,UAAU,CAACG,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAPR,CADA,CADJ;AAgBH;;AAED,eAAeJ,WAAf","sourcesContent":["import React, {useState} from 'react';\nimport Measure from 'react-measure';\n\nimport GraphDisplay from './GraphDisplay';\n\nfunction DisplayArea(){\n    const [dimensions, setDimensions] = useState({width: 300, height: 300});\n\n\n    return(\n        <div  style={{height:\"98%\", width:\"98%\"}}>\n        <Measure\n            bounds\n            onResize={contentRect => {\n                setDimensions(contentRect.bounds)\n            }}\n        >\n            {({ measureRef }) => (\n                <div ref={measureRef} style={{height:\"98%\", width:\"98%\"}}>\n                    <GraphDisplay width={dimensions.width} height={dimensions.height} />\n                </div>\n            )}\n        </Measure>\n        </div>\n    );\n}\n\nexport default DisplayArea;"]},"metadata":{},"sourceType":"module"}