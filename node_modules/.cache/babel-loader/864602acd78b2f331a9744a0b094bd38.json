{"ast":null,"code":"const utils = {\n  randomize: (size, unique) => {\n    let data = [];\n\n    if (unique) {\n      for (let i = 1; i <= size; i++) {\n        data.push({\n          x: i,\n          y: i,\n          color: '#ff957a'\n        });\n      }\n\n      ;\n    } else {\n      for (let i = 1; i <= size; i++) {\n        data.push({\n          x: i,\n          y: Math.floor(Math.random() * size + 1),\n          color: '#ff957a'\n        });\n      }\n\n      ;\n    }\n\n    for (let i = data.length - 1; i >= 0; i--) {\n      let rand = Math.floor(Math.random() * (i + 1));\n      let temp = data[rand].y;\n      data[rand].y = data[i].y;\n      data[i].y = temp;\n    }\n\n    return data;\n  },\n  swap: (values, i, j) => {\n    let temp = values[i];\n    values[i] = values[j];\n    values[j] = temp;\n    return values;\n  }\n};\nexport default utils;","map":{"version":3,"sources":["/home/asalmi/Documents/sort2.0/src/utils.js"],"names":["utils","randomize","size","unique","data","i","push","x","y","color","Math","floor","random","length","rand","temp","swap","values","j"],"mappings":"AAAA,MAAMA,KAAK,GAAG;AACVC,EAAAA,SAAS,EAAE,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACzB,QAAIC,IAAI,GAAG,EAAX;;AACA,QAAGD,MAAH,EAAU;AACN,WAAI,IAAIE,CAAC,GAAC,CAAV,EAAaA,CAAC,IAAEH,IAAhB,EAAsBG,CAAC,EAAvB,EAA0B;AAACD,QAAAA,IAAI,CAACE,IAAL,CAAU;AAACC,UAAAA,CAAC,EAAEF,CAAJ;AAAOG,UAAAA,CAAC,EAAEH,CAAV;AAAaI,UAAAA,KAAK,EAAE;AAApB,SAAV;AAA0C;;AAAA;AACxE,KAFD,MAGI;AACA,WAAI,IAAIJ,CAAC,GAAC,CAAV,EAAaA,CAAC,IAAEH,IAAhB,EAAsBG,CAAC,EAAvB,EAA0B;AAACD,QAAAA,IAAI,CAACE,IAAL,CAAU;AAACC,UAAAA,CAAC,EAAEF,CAAJ;AAAOG,UAAAA,CAAC,EAAGE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBV,IAAhB,GAAuB,CAAlC,CAAX;AAAiDO,UAAAA,KAAK,EAAE;AAAxD,SAAV;AAA8E;;AAAA;AAC5G;;AAED,SAAI,IAAIJ,CAAC,GAACD,IAAI,CAACS,MAAL,GAAY,CAAtB,EAAyBR,CAAC,IAAE,CAA5B,EAA+BA,CAAC,EAAhC,EAAmC;AAC/B,UAAIS,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBP,CAAC,GAAG,CAArB,CAAX,CAAX;AACA,UAAIU,IAAI,GAAGX,IAAI,CAACU,IAAD,CAAJ,CAAWN,CAAtB;AACAJ,MAAAA,IAAI,CAACU,IAAD,CAAJ,CAAWN,CAAX,GAAeJ,IAAI,CAACC,CAAD,CAAJ,CAAQG,CAAvB;AACAJ,MAAAA,IAAI,CAACC,CAAD,CAAJ,CAAQG,CAAR,GAAYO,IAAZ;AACH;;AAED,WAAOX,IAAP;AACH,GAlBS;AAoBVY,EAAAA,IAAI,EAAE,CAACC,MAAD,EAASZ,CAAT,EAAYa,CAAZ,KAAkB;AACpB,QAAIH,IAAI,GAAGE,MAAM,CAACZ,CAAD,CAAjB;AACAY,IAAAA,MAAM,CAACZ,CAAD,CAAN,GAAYY,MAAM,CAACC,CAAD,CAAlB;AACAD,IAAAA,MAAM,CAACC,CAAD,CAAN,GAAYH,IAAZ;AAEA,WAAOE,MAAP;AACH;AA1BS,CAAd;AA6BA,eAAejB,KAAf","sourcesContent":["const utils = {\n    randomize: (size, unique) => {\n        let data = [];\n        if(unique){\n            for(let i=1; i<=size; i++){data.push({x: i, y: i, color: '#ff957a'})};\n        }\n        else{\n            for(let i=1; i<=size; i++){data.push({x: i, y:  Math.floor(Math.random() * size + 1), color: '#ff957a'})};\n        }\n        \n        for(let i=data.length-1; i>=0; i--){\n            let rand = Math.floor(Math.random() * (i + 1));\n            let temp = data[rand].y;\n            data[rand].y = data[i].y;\n            data[i].y = temp;\n        }\n\n        return data;\n    },\n\n    swap: (values, i, j) => {\n        let temp = values[i];\n        values[i] = values[j];\n        values[j] = temp;\n\n        return values;\n    }\n}\n\nexport default utils;"]},"metadata":{},"sourceType":"module"}