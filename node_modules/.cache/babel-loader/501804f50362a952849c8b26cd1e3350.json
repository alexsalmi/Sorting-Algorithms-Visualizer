{"ast":null,"code":"const utils = {\n  randomize: (size, unique) => {\n    let values = [];\n\n    if (unique) {\n      for (let i = 1; i <= size; i++) {\n        values.push({\n          x: i,\n          y: i,\n          color: '#ff957a'\n        });\n      }\n\n      ;\n    } else {\n      for (let i = 1; i <= size; i++) {\n        values.push({\n          x: i,\n          y: Math.floor(Math.random() * size + 1),\n          color: '#ff957a'\n        });\n      }\n\n      ;\n    }\n\n    for (let i = values.length - 1; i >= 0; i--) {\n      let rand = Math.floor(Math.random() * (i + 1));\n      let temp = values[rand].y;\n      values[rand].y = values[i].y;\n      values[i].y = temp;\n    }\n\n    return values;\n  },\n  swap: (values, i, j) => {\n    let temp = values[i];\n    values[i] = values[j];\n    values[j] = temp;\n    return values;\n  }\n};\nexport default utils;","map":{"version":3,"sources":["/home/asalmi/Documents/sort2.0/src/utils.js"],"names":["utils","randomize","size","unique","values","i","push","x","y","color","Math","floor","random","length","rand","temp","swap","j"],"mappings":"AAAA,MAAMA,KAAK,GAAG;AACVC,EAAAA,SAAS,EAAE,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACzB,QAAIC,MAAM,GAAG,EAAb;;AACA,QAAGD,MAAH,EAAU;AACN,WAAI,IAAIE,CAAC,GAAC,CAAV,EAAaA,CAAC,IAAEH,IAAhB,EAAsBG,CAAC,EAAvB,EAA0B;AAACD,QAAAA,MAAM,CAACE,IAAP,CAAY;AAACC,UAAAA,CAAC,EAAEF,CAAJ;AAAOG,UAAAA,CAAC,EAAEH,CAAV;AAAaI,UAAAA,KAAK,EAAE;AAApB,SAAZ;AAA4C;;AAAA;AAC1E,KAFD,MAGI;AACA,WAAI,IAAIJ,CAAC,GAAC,CAAV,EAAaA,CAAC,IAAEH,IAAhB,EAAsBG,CAAC,EAAvB,EAA0B;AAACD,QAAAA,MAAM,CAACE,IAAP,CAAY;AAACC,UAAAA,CAAC,EAAEF,CAAJ;AAAOG,UAAAA,CAAC,EAAGE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBV,IAAhB,GAAuB,CAAlC,CAAX;AAAiDO,UAAAA,KAAK,EAAE;AAAxD,SAAZ;AAAgF;;AAAA;AAC9G;;AAED,SAAI,IAAIJ,CAAC,GAACD,MAAM,CAACS,MAAP,GAAc,CAAxB,EAA2BR,CAAC,IAAE,CAA9B,EAAiCA,CAAC,EAAlC,EAAqC;AACjC,UAAIS,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBP,CAAC,GAAG,CAArB,CAAX,CAAX;AACA,UAAIU,IAAI,GAAGX,MAAM,CAACU,IAAD,CAAN,CAAaN,CAAxB;AACAJ,MAAAA,MAAM,CAACU,IAAD,CAAN,CAAaN,CAAb,GAAiBJ,MAAM,CAACC,CAAD,CAAN,CAAUG,CAA3B;AACAJ,MAAAA,MAAM,CAACC,CAAD,CAAN,CAAUG,CAAV,GAAcO,IAAd;AACH;;AAED,WAAOX,MAAP;AACH,GAlBS;AAoBVY,EAAAA,IAAI,EAAE,CAACZ,MAAD,EAASC,CAAT,EAAYY,CAAZ,KAAkB;AACpB,QAAIF,IAAI,GAAGX,MAAM,CAACC,CAAD,CAAjB;AACAD,IAAAA,MAAM,CAACC,CAAD,CAAN,GAAYD,MAAM,CAACa,CAAD,CAAlB;AACAb,IAAAA,MAAM,CAACa,CAAD,CAAN,GAAYF,IAAZ;AAEA,WAAOX,MAAP;AACH;AA1BS,CAAd;AA6BA,eAAeJ,KAAf","sourcesContent":["const utils = {\n    randomize: (size, unique) => {\n        let values = [];\n        if(unique){\n            for(let i=1; i<=size; i++){values.push({x: i, y: i, color: '#ff957a'})};\n        }\n        else{\n            for(let i=1; i<=size; i++){values.push({x: i, y:  Math.floor(Math.random() * size + 1), color: '#ff957a'})};\n        }\n        \n        for(let i=values.length-1; i>=0; i--){\n            let rand = Math.floor(Math.random() * (i + 1));\n            let temp = values[rand].y;\n            values[rand].y = values[i].y;\n            values[i].y = temp;\n        }\n\n        return values;\n    },\n\n    swap: (values, i, j) => {\n        let temp = values[i];\n        values[i] = values[j];\n        values[j] = temp;\n\n        return values;\n    }\n}\n\nexport default utils;"]},"metadata":{},"sourceType":"module"}