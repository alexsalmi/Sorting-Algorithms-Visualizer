{"ast":null,"code":"var _jsxFileName = \"/home/asalmi/Documents/sort2.0/src/components/App.js\";\nimport React, { useState } from 'react';\nimport '../styles/App.css';\nimport { Box, Grid } from '@material-ui/core';\nimport ControlPanel from './ControlPanel';\nimport DisplayArea from './DisplayArea';\nimport utils from '../utils.js';\n\nfunction App() {\n  const [size, setSize] = useState(250);\n  const [unique, setUnique] = useState(false);\n  const [data, setData] = useState(utils.randomize(size, unique));\n  const [algo, setAlgo] = useState('insertion');\n  const [delay, setDelay] = useState(500);\n  const [steps, setSteps] = useState(utils.getSolutionSteps(data, algo));\n  const [stepInd, setStepInd] = useState(0);\n\n  const randomizeData = (s = size, u = unique) => {\n    let newData = utils.randomize(s, u);\n    setData(newData);\n    let solSteps = utils.getSolutionSteps(newData, algo);\n    setSteps(solSteps);\n    console.log(solSteps);\n  };\n\n  const toggleUnique = value => {\n    setUnique(value);\n    randomizeData(size, value);\n  };\n\n  const changeAlgo = value => {\n    setAlgo(value);\n    let solSteps = utils.getSolutionSteps(data, value);\n    setSteps(solSteps);\n  };\n\n  const solve = () => {\n    setStepInd(0);\n    let interval = setInterval(() => {\n      setData((data, steps, stepInd) => utils.performStep(data, steps[stepInd]));\n      setStepInd(stepInd => stepInd + 1);\n      console.log(stepInd);\n\n      if (stepInd === data.length) {\n        clearInterval(interval);\n      }\n    }, delay);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    height: \"98vh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    style: {\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      height: \"75%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DisplayArea, {\n    data: data,\n    stepInd: stepInd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      height: \"25%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ControlPanel, {\n    randomize: randomizeData,\n    size: size,\n    setSize: setSize,\n    unique: unique,\n    setUnique: toggleUnique,\n    algo: algo,\n    setAlgo: changeAlgo,\n    delay: delay,\n    setDelay: setDelay,\n    solve: solve,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/asalmi/Documents/sort2.0/src/components/App.js"],"names":["React","useState","Box","Grid","ControlPanel","DisplayArea","utils","App","size","setSize","unique","setUnique","data","setData","randomize","algo","setAlgo","delay","setDelay","steps","setSteps","getSolutionSteps","stepInd","setStepInd","randomizeData","s","u","newData","solSteps","console","log","toggleUnique","value","changeAlgo","solve","interval","setInterval","performStep","length","clearInterval","height"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport '../styles/App.css';\nimport { Box, Grid } from '@material-ui/core';\n\nimport ControlPanel from './ControlPanel';\nimport DisplayArea from './DisplayArea';\n\nimport utils from '../utils.js';\n\nfunction App() {\n  const [size,    setSize]   =  useState(250);\n  const [unique,  setUnique] =  useState(false);\n  const [data,    setData]   =  useState(utils.randomize(size, unique));\n  const [algo,    setAlgo]   =  useState('insertion');\n  const [delay,   setDelay]  =  useState(500);\n  const [steps,   setSteps]  =  useState(utils.getSolutionSteps(data, algo));\n  const [stepInd, setStepInd] = useState(0);\n\n  const randomizeData = (s = size, u = unique) => {\n    let newData = utils.randomize(s, u)\n    setData(newData);\n    let solSteps = utils.getSolutionSteps(newData, algo);\n    setSteps(solSteps);\n    console.log(solSteps);\n  };\n  const toggleUnique = (value) => {\n    setUnique(value);\n    randomizeData(size, value);\n  };\n  const changeAlgo = (value) => {\n    setAlgo(value);\n    let solSteps = utils.getSolutionSteps(data, value);\n    setSteps(solSteps);\n  }\n\n  const solve = () => {\n    setStepInd(0);\n    let interval = setInterval(() => {\n      setData((data, steps, stepInd) => utils.performStep(data, steps[stepInd]));\n      setStepInd(stepInd => stepInd+1);\n      console.log(stepInd)\n\n      if(stepInd === data.length){\n        clearInterval(interval);\n      }\n    }, delay);\n\n  }\n\n  return (\n    <div className=\"App\">\n    <Box height=\"98vh\"> \n      <Grid \n        container\n        direction=\"row\"\n        style={{height: \"100%\"}}\n      >\n        <Grid item xs={12} \n          style={{ height: \"75%\"}}\n        >\n          <DisplayArea data={data} stepInd={stepInd} />\n        </Grid>\n        <Grid item xs={12} \n          style={{ height: \"25%\" }}\n        >\n          <ControlPanel \n            randomize={randomizeData} \n            size={size}\n            setSize={setSize}\n            unique={unique}\n            setUnique={toggleUnique}\n            algo={algo}\n            setAlgo={changeAlgo}\n            delay={delay}\n            setDelay={setDelay}\n            solve={solve}\n          />\n        </Grid>\n      </Grid>\n    </Box>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}