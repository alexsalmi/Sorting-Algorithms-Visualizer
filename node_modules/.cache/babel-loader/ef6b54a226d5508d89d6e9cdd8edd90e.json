{"ast":null,"code":"var _jsxFileName = \"/home/asalmi/Documents/sort2.0/src/components/App.js\";\nimport React, { useState } from 'react';\nimport '../styles/App.css';\nimport { Box, Grid } from '@material-ui/core';\nimport ControlPanel from './ControlPanel';\nimport DisplayArea from './DisplayArea';\nimport utils from '../utils.js';\nimport { SettingsOverscanOutlined } from '@material-ui/icons';\n\nfunction App() {\n  const [size, setSize] = useState(55);\n  const [unique, setUnique] = useState(false);\n  const [data, setData] = useState(utils.randomize(size, unique));\n  const [algo, setAlgo] = useState('insertion');\n  const [delay, setDelay] = useState(500);\n  const [steps, setSteps] = useState(utils.getSolutionSteps(data, algo));\n  const [stepInd, setStepInd] = useState(0);\n  const [solving, setSolving] = useState(false);\n\n  const randomizeData = (s = size, u = unique) => {\n    let newData = utils.randomize(s, u);\n    setData(newData);\n    let solSteps = utils.getSolutionSteps(newData, algo);\n    setSteps(solSteps);\n    setStepInd(0);\n  };\n\n  const toggleUnique = value => {\n    setUnique(value);\n    randomizeData(size, value);\n  };\n\n  const changeAlgo = value => {\n    setAlgo(value);\n    let solSteps = utils.getSolutionSteps(data, value);\n    setSteps(solSteps);\n    setStepInd(0);\n  };\n\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      if (solving && stepInd !== steps.length) {\n        setData(utils.performStep(data, steps[stepInd]));\n        setStepInd(stepInd => stepInd + 1);\n      } else if (stepInd === steps.length) {\n        setSolving(solving => false);\n      }\n    }, delay);\n    return () => {\n      clearTimeout(timer);\n    };\n  });\n\n  const step = instruction => {\n    switch (instruction) {\n      case 'next':\n        if (stepInd !== steps.length) {\n          setData(utils.performStep(data, steps[stepInd]));\n          setStepInd(stepInd => stepInd + 1);\n        }\n\n        break;\n\n      case 'back':\n        if (stepInd !== 0) {\n          setData(utils.performStep(data, steps[stepInd - 2]));\n          setStepInd(stepInd => stepInd - 1);\n        }\n\n        break;\n    }\n\n    if (instruction == 'next') {}\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    height: \"98vh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    style: {\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      height: \"75%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DisplayArea, {\n    data: data,\n    stepInd: stepInd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      height: \"25%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ControlPanel, {\n    size: size,\n    setSize: setSize,\n    unique: unique,\n    setUnique: toggleUnique,\n    algo: algo,\n    setAlgo: changeAlgo,\n    delay: delay,\n    setDelay: setDelay,\n    solving: solving,\n    setSolving: setSolving,\n    randomize: randomizeData,\n    step: step,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/asalmi/Documents/sort2.0/src/components/App.js"],"names":["React","useState","Box","Grid","ControlPanel","DisplayArea","utils","SettingsOverscanOutlined","App","size","setSize","unique","setUnique","data","setData","randomize","algo","setAlgo","delay","setDelay","steps","setSteps","getSolutionSteps","stepInd","setStepInd","solving","setSolving","randomizeData","s","u","newData","solSteps","toggleUnique","value","changeAlgo","useEffect","timer","setTimeout","length","performStep","clearTimeout","step","instruction","height"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport '../styles/App.css';\nimport { Box, Grid } from '@material-ui/core';\n\nimport ControlPanel from './ControlPanel';\nimport DisplayArea from './DisplayArea';\n\nimport utils from '../utils.js';\nimport { SettingsOverscanOutlined } from '@material-ui/icons';\n\nfunction App() {\n  const [size,    setSize]   =  useState(55);\n  const [unique,  setUnique] =  useState(false);\n  const [data,    setData]   =  useState(utils.randomize(size, unique));\n  const [algo,    setAlgo]   =  useState('insertion');\n  const [delay,   setDelay]  =  useState(500);\n  const [steps,   setSteps]  =  useState(utils.getSolutionSteps(data, algo));\n  const [stepInd, setStepInd] = useState(0);\n  const [solving, setSolving] = useState(false);\n\n  const randomizeData = (s = size, u = unique) => {\n    let newData = utils.randomize(s, u)\n    setData(newData);\n    let solSteps = utils.getSolutionSteps(newData, algo);\n    setSteps(solSteps);\n    setStepInd(0);\n  };\n  const toggleUnique = (value) => {\n    setUnique(value);\n    randomizeData(size, value);\n  };\n  const changeAlgo = (value) => {\n    setAlgo(value);\n    let solSteps = utils.getSolutionSteps(data, value);\n    setSteps(solSteps);\n    setStepInd(0);\n  }\n\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      if(solving && stepInd !== steps.length){\n        setData(utils.performStep(data, steps[stepInd]));\n        setStepInd(stepInd => stepInd+1);\n      }\n      else if(stepInd === steps.length){\n        setSolving(solving => false);\n      }\n    }, delay);\n    return () => {\n      clearTimeout(timer);\n    };\n  })\n\n  const step = (instruction) => {\n    switch (instruction){\n      case 'next':\n        if(stepInd !== steps.length){\n          setData(utils.performStep(data, steps[stepInd]));\n          setStepInd(stepInd => stepInd+1);\n        }\n        break;\n      case 'back':\n        if(stepInd !== 0){\n          setData(utils.performStep(data, steps[stepInd-2]));\n          setStepInd(stepInd => stepInd-1);\n        }\n        break;\n\n    }\n    if(instruction=='next'){\n    }\n  }\n\n  return (\n    <div className=\"App\">\n    <Box height=\"98vh\"> \n      <Grid \n        container\n        direction=\"row\"\n        style={{height: \"100%\"}}\n      >\n        <Grid item xs={12} \n          style={{ height: \"75%\"}}\n        >\n          <DisplayArea data={data} stepInd={stepInd} />\n        </Grid>\n        <Grid item xs={12} \n          style={{ height: \"25%\" }}\n        >\n          <ControlPanel \n            size={size}\n            setSize={setSize}\n            unique={unique}\n            setUnique={toggleUnique}\n            algo={algo}\n            setAlgo={changeAlgo}\n            delay={delay}\n            setDelay={setDelay}\n            solving={solving}\n            setSolving={setSolving}\n            randomize={randomizeData}\n            step={step}\n          />\n        </Grid>\n      </Grid>\n    </Box>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}