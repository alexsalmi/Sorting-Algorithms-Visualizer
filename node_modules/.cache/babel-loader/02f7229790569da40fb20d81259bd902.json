{"ast":null,"code":"var _jsxFileName = \"/home/asalmi/Documents/sort2.0/src/components/App.js\";\nimport React, { useState } from 'react';\nimport '../styles/App.css';\nimport { Box, Grid } from '@material-ui/core';\nimport ControlPanel from './ControlPanel';\nimport DisplayArea from './DisplayArea';\nimport utils from '../utils.js';\nimport algorithms from '../algorithms.js';\n\nfunction App() {\n  const [size, setSize] = useState(250);\n  const [unique, setUnique] = useState(false);\n  const [data, setData] = useState(utils.randomize(size, unique));\n  const [algo, setAlgo] = useState('insertion');\n  const [delay, setDelay] = useState(500);\n\n  var randomizeData = (s = size, u = unique) => {\n    setData(utils.randomize(s, u));\n  };\n\n  const toggleUnique = value => {\n    setUnique(value);\n    randomizeData(size, value);\n  };\n\n  const solve = () => {\n    let values = data.map(item => item.y);\n\n    switch (algo) {\n      case 'insertion':\n        let sortedValues = algorithms.insertion(values);\n    }\n\n    data.map((item, i) => {\n      return {\n        x: item.x,\n        y: sortedValues[i],\n        color: item.color\n      };\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    height: \"98vh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    style: {\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      height: \"75%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DisplayArea, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      height: \"25%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ControlPanel, {\n    randomize: randomizeData,\n    size: size,\n    setSize: setSize,\n    unique: unique,\n    setUnique: toggleUnique,\n    algo: algo,\n    setAlgo: setAlgo,\n    delay: delay,\n    setDelay: setDelay,\n    solve: solve,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/asalmi/Documents/sort2.0/src/components/App.js"],"names":["React","useState","Box","Grid","ControlPanel","DisplayArea","utils","algorithms","App","size","setSize","unique","setUnique","data","setData","randomize","algo","setAlgo","delay","setDelay","randomizeData","s","u","toggleUnique","value","solve","values","map","item","y","sortedValues","insertion","i","x","color","height"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport '../styles/App.css';\nimport { Box, Grid } from '@material-ui/core';\n\nimport ControlPanel from './ControlPanel';\nimport DisplayArea from './DisplayArea';\n\nimport utils from '../utils.js';\nimport algorithms from '../algorithms.js'\n\nfunction App() {\n  const [size,   setSize]   = useState(250);\n  const [unique, setUnique] = useState(false);\n  const [data,   setData]   = useState(utils.randomize(size, unique));\n  const [algo,   setAlgo]   = useState('insertion');\n  const [delay,  setDelay]  = useState(500);\n\n  var randomizeData = (s = size, u = unique) => {\n    setData(utils.randomize(s, u))\n  };\n  const toggleUnique = (value) => {\n    setUnique(value);\n    randomizeData(size, value);\n  };\n  const solve = () => {\n    let values = data.map(item => item.y);\n\n    switch (algo) {\n      case 'insertion':\n        let sortedValues = algorithms.insertion(values);\n    }\n\n    data.map((item, i) => {return {x: item.x, y: sortedValues[i], color: item.color}});\n  }\n\n  return (\n    <div className=\"App\">\n    <Box height=\"98vh\"> \n      <Grid \n        container\n        direction=\"row\"\n        style={{height: \"100%\"}}\n      >\n        <Grid item xs={12} \n          style={{ height: \"75%\"}}\n        >\n          <DisplayArea data={data} />\n        </Grid>\n        <Grid item xs={12} \n          style={{ height: \"25%\" }}\n        >\n          <ControlPanel \n            randomize={randomizeData} \n            size={size}\n            setSize={setSize}\n            unique={unique}\n            setUnique={toggleUnique}\n            algo={algo}\n            setAlgo={setAlgo}\n            delay={delay}\n            setDelay={setDelay}\n            solve={solve}\n          />\n        </Grid>\n      </Grid>\n    </Box>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}