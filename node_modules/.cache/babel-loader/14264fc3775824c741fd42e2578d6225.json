{"ast":null,"code":"const utils = {\n  randomize: (unique, size) => {\n    let values = [];\n\n    if (unique) {\n      for (let i = 1; i <= size; i++) {\n        values.push({\n          x: i,\n          y: i,\n          color: \"lightblue\"\n        });\n      }\n\n      ;\n    } else {\n      for (let i = 1; i <= val; i++) {\n        values.push({\n          x: i,\n          y: Math.floor(Math.random() * val + 1),\n          color: \"lightblue\"\n        });\n      }\n\n      ;\n    }\n\n    for (let i = values.length - 1; i >= 0; i--) {\n      let rand = Math.floor(Math.random() * (i + 1));\n      let temp = values[rand].y;\n      values[rand].y = values[i].y;\n      values[i].y = temp;\n    }\n\n    return values;\n  }\n};\nexport default utils;","map":{"version":3,"sources":["/home/asalmi/Documents/sort2.0/src/utils.js"],"names":["utils","randomize","unique","size","values","i","push","x","y","color","val","Math","floor","random","length","rand","temp"],"mappings":"AAAA,MAAMA,KAAK,GAAG;AACVC,EAAAA,SAAS,EAAE,CAACC,MAAD,EAASC,IAAT,KAAkB;AACzB,QAAIC,MAAM,GAAG,EAAb;;AAEA,QAAGF,MAAH,EAAU;AACN,WAAI,IAAIG,CAAC,GAAC,CAAV,EAAaA,CAAC,IAAEF,IAAhB,EAAsBE,CAAC,EAAvB,EAA0B;AAACD,QAAAA,MAAM,CAACE,IAAP,CAAY;AAACC,UAAAA,CAAC,EAAEF,CAAJ;AAAOG,UAAAA,CAAC,EAAEH,CAAV;AAAaI,UAAAA,KAAK,EAAE;AAApB,SAAZ;AAA8C;;AAAA;AAC5E,KAFD,MAGI;AACA,WAAI,IAAIJ,CAAC,GAAC,CAAV,EAAaA,CAAC,IAAEK,GAAhB,EAAqBL,CAAC,EAAtB,EAAyB;AAACD,QAAAA,MAAM,CAACE,IAAP,CAAY;AAACC,UAAAA,CAAC,EAAEF,CAAJ;AAAOG,UAAAA,CAAC,EAAGG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,GAAhB,GAAsB,CAAjC,CAAX;AAAgDD,UAAAA,KAAK,EAAE;AAAvD,SAAZ;AAAiF;;AAAA;AAC9G;;AACD,SAAI,IAAIJ,CAAC,GAACD,MAAM,CAACU,MAAP,GAAc,CAAxB,EAA2BT,CAAC,IAAE,CAA9B,EAAiCA,CAAC,EAAlC,EAAqC;AACjC,UAAIU,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBR,CAAC,GAAG,CAArB,CAAX,CAAX;AACA,UAAIW,IAAI,GAAGZ,MAAM,CAACW,IAAD,CAAN,CAAaP,CAAxB;AACAJ,MAAAA,MAAM,CAACW,IAAD,CAAN,CAAaP,CAAb,GAAiBJ,MAAM,CAACC,CAAD,CAAN,CAAUG,CAA3B;AACAJ,MAAAA,MAAM,CAACC,CAAD,CAAN,CAAUG,CAAV,GAAcQ,IAAd;AACH;;AAED,WAAOZ,MAAP;AACH;AAlBS,CAAd;AAqBA,eAAeJ,KAAf","sourcesContent":["const utils = {\n    randomize: (unique, size) => {\n        let values = [];\n\n        if(unique){\n            for(let i=1; i<=size; i++){values.push({x: i, y: i, color: \"lightblue\"})};\n        }\n        else{\n            for(let i=1; i<=val; i++){values.push({x: i, y:  Math.floor(Math.random() * val + 1), color: \"lightblue\"})};\n        }\n        for(let i=values.length-1; i>=0; i--){\n            let rand = Math.floor(Math.random() * (i + 1));\n            let temp = values[rand].y;\n            values[rand].y = values[i].y;\n            values[i].y = temp;\n        }\n\n        return values;\n    }\n}\n\nexport default utils;"]},"metadata":{},"sourceType":"module"}