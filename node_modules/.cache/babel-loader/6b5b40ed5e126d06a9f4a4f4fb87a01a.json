{"ast":null,"code":"var _jsxFileName = \"/home/asalmi/Documents/sort2.0/src/components/DisplayArea.js\";\nimport React, { useState } from 'react';\nimport Measure from 'react-measure';\nimport GraphDisplay from './GraphDisplay';\n\nfunction DisplayArea(props) {\n  const [dimensions, setDimensions] = useState({\n    width: 300,\n    height: 300\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"103%\",\n      width: \"98%\"\n    },\n    key: props.data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Measure, {\n    bounds: true,\n    onResize: contentRect => {\n      setDimensions(contentRect.bounds);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, ({\n    measureRef\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    ref: measureRef,\n    style: {\n      height: \"103%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(GraphDisplay, {\n    width: dimensions.width,\n    height: dimensions.height,\n    data: props.data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default DisplayArea;","map":{"version":3,"sources":["/home/asalmi/Documents/sort2.0/src/components/DisplayArea.js"],"names":["React","useState","Measure","GraphDisplay","DisplayArea","props","dimensions","setDimensions","width","height","data","contentRect","bounds","measureRef"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AACvB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC;AAACO,IAAAA,KAAK,EAAE,GAAR;AAAaC,IAAAA,MAAM,EAAE;AAArB,GAAD,CAA5C;AAEA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACA,MAAAA,MAAM,EAAC,MAAR;AAAgBD,MAAAA,KAAK,EAAC;AAAtB,KAAZ;AAA2C,IAAA,GAAG,EAAEH,KAAK,CAACK,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,OAAD;AACI,IAAA,MAAM,MADV;AAEI,IAAA,QAAQ,EAAEC,WAAW,IAAI;AAACJ,MAAAA,aAAa,CAACI,WAAW,CAACC,MAAb,CAAb;AAAkC,KAFhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIK,CAAC;AAAEC,IAAAA;AAAF,GAAD,kBACG;AAAK,IAAA,GAAG,EAAEA,UAAV;AAAsB,IAAA,KAAK,EAAE;AAACJ,MAAAA,MAAM,EAAC;AAAR,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AACI,IAAA,KAAK,EAAEH,UAAU,CAACE,KADtB;AAEI,IAAA,MAAM,EAAEF,UAAU,CAACG,MAFvB;AAGI,IAAA,IAAI,EAAEJ,KAAK,CAACK,IAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALR,CADA,CADJ;AAkBH;;AAED,eAAeN,WAAf","sourcesContent":["import React, {useState} from 'react';\nimport Measure from 'react-measure';\n\nimport GraphDisplay from './GraphDisplay';\n\nfunction DisplayArea(props){\n    const [dimensions, setDimensions] = useState({width: 300, height: 300});\n\n    return(\n        <div style={{height:\"103%\", width:\"98%\"}}  key={props.data}>\n        <Measure\n            bounds\n            onResize={contentRect => {setDimensions(contentRect.bounds)}}\n        >\n            {({ measureRef }) => (\n                <div ref={measureRef} style={{height:\"103%\"}}>\n                    <GraphDisplay \n                        width={dimensions.width} \n                        height={dimensions.height} \n                        data={props.data}\n                    />\n                </div>\n            )}\n        </Measure>\n        </div>\n    );\n}\n\nexport default DisplayArea;"]},"metadata":{},"sourceType":"module"}